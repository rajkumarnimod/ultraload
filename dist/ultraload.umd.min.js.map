{"version":3,"file":"ultraload.umd.min.js","sources":["../src/ultraload.js"],"sourcesContent":["// UltraLoad.js - Universal Module Definition (UMD)\r\n(function (root, factory) {\r\n  if (typeof define === \"function\" && define.amd) {\r\n    // AMD (RequireJS)\r\n    define([], factory);\r\n  } else if (typeof module === \"object\" && module.exports) {\r\n    // CommonJS (Node)\r\n    module.exports = factory();\r\n  } else if (typeof exports === \"object\") {\r\n    // CommonJS (Node)\r\n    exports.UltraLoad = factory();\r\n  } else {\r\n    // Browser global\r\n    root.UltraLoad = factory();\r\n  }\r\n})(typeof self !== \"undefined\" ? self : this, function () {\r\n  \"use strict\";\r\n\r\n  // Private variables\r\n  let lottieLoaded = false;\r\n  let initialized = false;\r\n\r\n  // Default configuration\r\n  const defaults = {\r\n    target: \"#ultraload\",\r\n    text: \"\",\r\n    iconType: \"default\",\r\n    textAnimation: false,\r\n    progressBar: false,\r\n    progressPercentage: false,\r\n    duration: 3000,\r\n    theme: \"light\",\r\n    autoHide: true,\r\n    onComplete: null,\r\n    lottieUrl: null,\r\n    logoUrl: null,\r\n    ariaLabel: \"Loading content\",\r\n    ariaLive: \"polite\",\r\n    skipLink: false,\r\n  };\r\n\r\n  // Load Lottie library dynamically\r\n  function loadLottie(callback) {\r\n    if (typeof bodymovin === \"undefined\" && !lottieLoaded) {\r\n      const script = document.createElement(\"script\");\r\n      script.src =\r\n        \"https://cdnjs.cloudflare.com/ajax/libs/bodymovin/5.7.4/lottie.min.js\";\r\n      script.onload = function () {\r\n        lottieLoaded = true;\r\n        callback();\r\n      };\r\n      script.onerror = function () {\r\n        console.warn(\r\n          \"UltraLoad: Lottie animation requested but loading failed\"\r\n        );\r\n        callback();\r\n      };\r\n      document.head.appendChild(script);\r\n    } else if (typeof bodymovin !== \"undefined\") {\r\n      callback();\r\n    } else {\r\n      console.warn(\"UltraLoad: Lottie animation requested but loading failed\");\r\n      callback();\r\n    }\r\n  }\r\n\r\n  // Helper function to get loader icon content\r\n  function getLoaderIconContent(iconType) {\r\n    if (typeof iconType !== \"string\") return \"\";\r\n\r\n    const icons = {\r\n      default: \"\",\r\n      \"dots-circle\": \"\",\r\n      wave: \"<div></div><div></div><div></div><div></div><div></div>\",\r\n      \"cube-grid\":\r\n        \"<div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\",\r\n      ring: \"\",\r\n      \"bar-jump\": \"<div></div><div></div><div></div><div></div><div></div>\",\r\n      \"circle-bounce\":\r\n        \"<div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\",\r\n      \"dual-ring\": \"\",\r\n      \"folding-cube\": \"<div></div><div></div><div></div><div></div>\",\r\n      chase: `\r\n                        <div class=\"ultraload-icon-chase-dot\"></div>\r\n                        <div class=\"ultraload-icon-chase-dot\"></div>\r\n                        <div class=\"ultraload-icon-chase-dot\"></div>\r\n                        <div class=\"ultraload-icon-chase-dot\"></div>\r\n                        <div class=\"ultraload-icon-chase-dot\"></div>\r\n                        <div class=\"ultraload-icon-chase-dot\"></div>\r\n                    `,\r\n      \"circle-dots\": \"<div></div><div></div><div></div><div></div>\",\r\n      ellipsis: \"<div></div><div></div><div></div><div></div>\",\r\n      grid: \"<div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\",\r\n      hourglass: \"\",\r\n      \"jelly-box\": \"<div></div><div></div><div></div><div></div>\",\r\n      orbit: '<div class=\"ultraload-icon-orbit-inner\"></div>',\r\n      pacman: \"\",\r\n      pulsar: \"\",\r\n      ripple: \"<div></div><div></div>\",\r\n      roller:\r\n        \"<div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\",\r\n      spinner: \"<div></div><div></div><div></div>\",\r\n      \"square-spin\": \"\",\r\n      swirl: \"<div></div>\",\r\n      timer: \"\",\r\n      wobble: \"<div></div><div></div><div></div>\",\r\n      zigzag: \"<div></div><div></div><div></div><div></div>\",\r\n      atom: \"<div></div>\",\r\n      infinity: \"<div></div><div></div>\",\r\n      metronome: \"<div></div>\",\r\n      moon: \"\",\r\n      \"newton-cradle\": \"<div></div><div></div><div></div><div></div>\",\r\n      pinwheel: \"<div></div><div></div><div></div><div></div>\",\r\n      radar: \"<div></div>\",\r\n      \"revolving-dot\": \"<div></div><div></div><div></div><div></div>\",\r\n      \"scaling-squares\": \"<div></div><div></div><div></div><div></div>\",\r\n      \"semi-circle\": \"<div></div>\",\r\n      \"spinning-circles\": \"<div></div>\",\r\n      spring: \"<div></div><div></div><div></div><div></div>\",\r\n      stretch: \"<div></div>\",\r\n      trefoil: \"<div></div>\",\r\n      \"twin-circles\": \"<div></div><div></div>\",\r\n      vortex: \"<div></div>\",\r\n      whirl: \"<div></div>\",\r\n      windmill: \"<div></div><div></div><div></div><div></div>\",\r\n      \"yin-yang\": \"\",\r\n      \"zigzag-circle\": \"<div></div>\",\r\n      dna: \"<div></div><div></div><div></div><div></div>\",\r\n      \"ferris-wheel\": \"<div></div><div></div><div></div><div></div>\",\r\n      galaxy: \"<div></div><div></div><div></div><div></div>\",\r\n      hyperspace: \"<div></div>\",\r\n      quantum: \"<div></div><div></div><div></div><div></div>\",\r\n    };\r\n\r\n    return icons[iconType] || \"\";\r\n  }\r\n\r\n  // Helper function to apply text animation\r\n  function applyTextAnimation(textEl, animationType, text) {\r\n    // Clear previous animations\r\n    textEl.className = \"ultraload-text\";\r\n    if (animationType) {\r\n      textEl.classList.add(`ultraload-animate-${animationType}`);\r\n    }\r\n\r\n    // Special handling for animations that need child elements\r\n    if (animationType === \"wave\") {\r\n      textEl.innerHTML = \"\";\r\n      const textContent = text || \"\";\r\n      textContent.split(\"\").forEach((char) => {\r\n        const span = document.createElement(\"span\");\r\n        span.textContent = char;\r\n        textEl.appendChild(span);\r\n      });\r\n    } else if (animationType === \"dropping\") {\r\n      textEl.innerHTML = \"\";\r\n      const words = (text || \"\").split(\",\");\r\n      words.forEach((word) => {\r\n        const div = document.createElement(\"div\");\r\n        div.textContent = word;\r\n        textEl.appendChild(div);\r\n      });\r\n    } else {\r\n      textEl.textContent = text || \"\";\r\n    }\r\n  }\r\n\r\n  // Helper function to animate progress bar\r\n  function animateProgressBar(progressBarEl, progressPercentageEl, duration) {\r\n    let start = null;\r\n\r\n    const animate = (timestamp) => {\r\n      if (!start) start = timestamp;\r\n      const progress = Math.min((timestamp - start) / duration, 1);\r\n      progressBarEl.style.width = `${progress * 100}%`;\r\n\r\n      if (progressPercentageEl) {\r\n        progressPercentageEl.textContent = `${Math.round(progress * 100)}%`;\r\n      }\r\n\r\n      if (progress < 1) {\r\n        requestAnimationFrame(animate);\r\n      }\r\n    };\r\n\r\n    requestAnimationFrame(animate);\r\n  }\r\n\r\n  // Helper function to hide loader\r\n  function hideLoader(el, callback) {\r\n    const container = el.querySelector(\".ultraload-container\");\r\n    if (container) {\r\n      container.classList.add(\"ultraload-hide\");\r\n      setTimeout(() => {\r\n        el.style.display = \"none\";\r\n        if (typeof callback === \"function\") {\r\n          callback();\r\n        } else if (typeof callback === \"string\") {\r\n          try {\r\n            new Function(callback)();\r\n          } catch (e) {\r\n            console.error(\"UltraLoad: Error executing onComplete callback:\", e);\r\n          }\r\n        }\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  // Initialize the loader\r\n  function init(config) {\r\n    // Merge configs\r\n    const el =\r\n      typeof config?.target === \"string\"\r\n        ? document.querySelector(config.target)\r\n        : config?.target || document.querySelector(defaults.target);\r\n\r\n    if (!el) {\r\n      console.error(\"UltraLoad: Target element not found\");\r\n      return;\r\n    }\r\n\r\n    const attrConfig = el.getAttribute(\"data-config\");\r\n    const mergedConfig = {\r\n      ...defaults,\r\n      ...(attrConfig ? JSON.parse(attrConfig) : {}),\r\n      ...config,\r\n    };\r\n\r\n    // Create loader container if it doesn't exist\r\n    if (!el.querySelector(\".ultraload-container\")) {\r\n      el.innerHTML = `\r\n                        <div class=\"ultraload-container ${\r\n                          mergedConfig.theme\r\n                            ? \"ultraload-theme-\" + mergedConfig.theme\r\n                            : \"\"\r\n                        }\" \r\n                             aria-label=\"${mergedConfig.ariaLabel}\" \r\n                             aria-live=\"${mergedConfig.ariaLive}\">\r\n                            <div class=\"ultraload-content\">\r\n                                ${\r\n                                  mergedConfig.logoUrl\r\n                                    ? `<img src=\"${mergedConfig.logoUrl}\" class=\"ultraload-logo\" alt=\"Logo\" aria-hidden=\"true\">`\r\n                                    : \"\"\r\n                                }\r\n                                \r\n                                ${\r\n                                  mergedConfig.lottieUrl\r\n                                    ? `<div class=\"ultraload-lottie-container\" aria-hidden=\"true\"></div>`\r\n                                    : mergedConfig.iconType !== false\r\n                                    ? `<div class=\"ultraload-icon ${\r\n                                        typeof mergedConfig.iconType ===\r\n                                        \"string\"\r\n                                          ? \"ultraload-icon-\" +\r\n                                            mergedConfig.iconType\r\n                                          : \"ultraload-icon-default\"\r\n                                      }\" aria-hidden=\"true\">\r\n                                            ${getLoaderIconContent(\r\n                                              mergedConfig.iconType\r\n                                            )}\r\n                                        </div>`\r\n                                    : \"\"\r\n                                }\r\n                                \r\n                                ${\r\n                                  mergedConfig.text !== false\r\n                                    ? `<div class=\"ultraload-text\" data-text=\"${mergedConfig.text}\">\r\n                                        ${mergedConfig.text}\r\n                                    </div>`\r\n                                    : \"\"\r\n                                }\r\n                                \r\n                                ${\r\n                                  mergedConfig.progressBar\r\n                                    ? `<div class=\"ultraload-progress\" aria-hidden=\"true\">\r\n                                        <div class=\"ultraload-progress-bar\"></div>\r\n                                        ${\r\n                                          mergedConfig.progressPercentage\r\n                                            ? '<div class=\"ultraload-progress-percentage\">0%</div>'\r\n                                            : \"\"\r\n                                        }\r\n                                    </div>`\r\n                                    : \"\"\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    `;\r\n    }\r\n\r\n    const containerEl = el.querySelector(\".ultraload-container\");\r\n    const textEl = el.querySelector(\".ultraload-text\");\r\n    const progressBarEl = el.querySelector(\".ultraload-progress-bar\");\r\n    const progressPercentageEl = el.querySelector(\r\n      \".ultraload-progress-percentage\"\r\n    );\r\n    const lottieContainerEl = el.querySelector(\".ultraload-lottie-container\");\r\n\r\n    // Reset container\r\n    containerEl.classList.remove(\"ultraload-hide\");\r\n    el.style.display = \"block\";\r\n\r\n    // Update aria attributes\r\n    containerEl.setAttribute(\"aria-label\", mergedConfig.ariaLabel);\r\n    containerEl.setAttribute(\"aria-live\", mergedConfig.ariaLive);\r\n\r\n    // Apply text animation\r\n    if (textEl && mergedConfig.textAnimation !== false) {\r\n      applyTextAnimation(textEl, mergedConfig.textAnimation, mergedConfig.text);\r\n    }\r\n\r\n    // Handle Lottie animation\r\n    if (mergedConfig.lottieUrl && lottieContainerEl) {\r\n      loadLottie(() => {\r\n        if (typeof bodymovin !== \"undefined\") {\r\n          bodymovin.loadAnimation({\r\n            container: lottieContainerEl,\r\n            renderer: \"svg\",\r\n            loop: true,\r\n            autoplay: true,\r\n            path: mergedConfig.lottieUrl,\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    // Handle progress bar\r\n    if (progressBarEl && mergedConfig.progressBar) {\r\n      animateProgressBar(\r\n        progressBarEl,\r\n        progressPercentageEl,\r\n        mergedConfig.duration\r\n      );\r\n    }\r\n\r\n    // Auto hide functionality\r\n    if (mergedConfig.autoHide) {\r\n      setTimeout(() => {\r\n        hideLoader(el, mergedConfig.onComplete);\r\n      }, mergedConfig.duration || 3000);\r\n    }\r\n\r\n    initialized = true;\r\n  }\r\n\r\n  // Public API\r\n  return {\r\n    init,\r\n    isInitialized: function () {\r\n      return initialized;\r\n    },\r\n\r\n    show: function (target = \"#ultraload\") {\r\n      const el =\r\n        typeof target === \"string\" ? document.querySelector(target) : target;\r\n      if (el) {\r\n        el.style.display = \"block\";\r\n        el.querySelector(\".ultraload-container\")?.classList.remove(\r\n          \"ultraload-hide\"\r\n        );\r\n      }\r\n    },\r\n\r\n    hide: function (target = \"#ultraload\", callback) {\r\n      const el =\r\n        typeof target === \"string\" ? document.querySelector(target) : target;\r\n      if (el) {\r\n        hideLoader(el, callback);\r\n      }\r\n    },\r\n\r\n    setProgress: function (percent, target = \"#ultraload\") {\r\n      const el =\r\n        typeof target === \"string\" ? document.querySelector(target) : target;\r\n      if (el) {\r\n        const progressBar = el.querySelector(\".ultraload-progress-bar\");\r\n        const progressPercentage = el.querySelector(\r\n          \".ultraload-progress-percentage\"\r\n        );\r\n        if (progressBar) {\r\n          progressBar.style.width = `${Math.min(100, Math.max(0, percent))}%`;\r\n        }\r\n        if (progressPercentage) {\r\n          progressPercentage.textContent = `${Math.round(percent)}%`;\r\n        }\r\n      }\r\n    },\r\n\r\n    setText: function (text, target = \"#ultraload\") {\r\n      const el =\r\n        typeof target === \"string\" ? document.querySelector(target) : target;\r\n      if (el) {\r\n        const textEl = el.querySelector(\".ultraload-text\");\r\n        if (textEl) {\r\n          textEl.textContent = text;\r\n          textEl.setAttribute(\"data-text\", text);\r\n        }\r\n      }\r\n    },\r\n\r\n    setAriaLabel: function (label, target = \"#ultraload\") {\r\n      const el =\r\n        typeof target === \"string\" ? document.querySelector(target) : target;\r\n      if (el) {\r\n        const container = el.querySelector(\".ultraload-container\");\r\n        if (container) {\r\n          container.setAttribute(\"aria-label\", label);\r\n        }\r\n      }\r\n    },\r\n\r\n    // Framework-specific initialization\r\n    install: function (Vue) {\r\n      Vue.component(\"ultraload\", {\r\n        props: {\r\n          config: {\r\n            type: Object,\r\n            default: () => ({}),\r\n          },\r\n        },\r\n        mounted() {\r\n          UltraLoad.init({\r\n            target: this.$el,\r\n            ...this.config,\r\n          });\r\n        },\r\n        render(h) {\r\n          return h(\"div\", {\r\n            attrs: {\r\n              \"data-loader\": \"ultraload\",\r\n            },\r\n          });\r\n        },\r\n      });\r\n    },\r\n\r\n    // React component\r\n    ReactComponent: function (props) {\r\n      const { config, ...rest } = props || {};\r\n      const ref = React.useRef(null);\r\n\r\n      React.useEffect(() => {\r\n        UltraLoad.init({\r\n          target: ref.current,\r\n          ...config,\r\n        });\r\n\r\n        return () => {\r\n          // Cleanup if needed\r\n        };\r\n      }, [config]);\r\n\r\n      return React.createElement(\"div\", {\r\n        ref: ref,\r\n        \"data-loader\": \"ultraload\",\r\n        ...rest,\r\n      });\r\n    },\r\n  };\r\n});\r\n\r\n// Auto-initialize when DOM is ready\r\nif (document.readyState !== \"loading\") {\r\n  initializeLoaders();\r\n} else {\r\n  document.addEventListener(\"DOMContentLoaded\", initializeLoaders);\r\n}\r\n\r\nfunction initializeLoaders() {\r\n  // Auto-initialize all loaders with data-loader attribute\r\n  document.querySelectorAll('[data-loader=\"ultraload\"]').forEach((el) => {\r\n    if (el.style.display !== \"none\") {\r\n      UltraLoad.init({ target: el });\r\n    }\r\n  });\r\n}\r\n"],"names":["factory","initializeLoaders","document","querySelectorAll","forEach","el","style","display","UltraLoad","init","target","self","lottieLoaded","initialized","defaults","text","iconType","textAnimation","progressBar","progressPercentage","duration","theme","autoHide","onComplete","lottieUrl","logoUrl","ariaLabel","ariaLive","skipLink","hideLoader","callback","container","querySelector","classList","add","setTimeout","Function","e","console","error","config","attrConfig","getAttribute","mergedConfig","JSON","parse","innerHTML","default","wave","ring","chase","ellipsis","grid","hourglass","orbit","pacman","pulsar","ripple","roller","spinner","swirl","timer","wobble","zigzag","atom","infinity","metronome","moon","pinwheel","radar","spring","stretch","trefoil","vortex","whirl","windmill","dna","galaxy","hyperspace","quantum","containerEl","textEl","progressBarEl","progressPercentageEl","lottieContainerEl","remove","setAttribute","animationType","className","split","char","span","createElement","textContent","appendChild","word","div","applyTextAnimation","bodymovin","warn","script","src","onload","onerror","head","loadLottie","loadAnimation","renderer","loop","autoplay","path","start","animate","timestamp","progress","Math","min","width","round","requestAnimationFrame","animateProgressBar","isInitialized","show","hide","setProgress","percent","max","setText","setAriaLabel","label","install","Vue","component","props","type","Object","mounted","this","$el","render","h","attrs","ReactComponent","rest","ref","React","useRef","useEffect","current","module","exports","readyState","addEventListener"],"mappings":"oZACA,IAAiBA,EAidjB,SAASC,IAEPC,SAASC,iBAAiB,6BAA6BC,QAASC,IACrC,SAArBA,EAAGC,MAAMC,SACXC,UAAUC,KAAK,CAAEC,OAAQL,KAG/B,CA1cmB,oBAATM,MAAuBA,KAdhBX,EAc6B,WAI5C,IAAIY,GAAe,EACfC,GAAc,EAGlB,MAAMC,EAAW,CACfJ,OAAQ,aACRK,KAAM,GACNC,SAAU,UACVC,eAAe,EACfC,aAAa,EACbC,oBAAoB,EACpBC,SAAU,IACVC,MAAO,QACPC,UAAU,EACVC,WAAY,KACZC,UAAW,KACXC,QAAS,KACTC,UAAW,kBACXC,SAAU,SACVC,UAAU,GAuJZ,SAASC,EAAWxB,EAAIyB,GACtB,MAAMC,EAAY1B,EAAG2B,cAAc,wBAC/BD,IACFA,EAAUE,UAAUC,IAAI,kBACxBC,WAAW,KAET,GADA9B,EAAGC,MAAMC,QAAU,OACK,mBAAbuB,EACTA,SACK,GAAwB,iBAAbA,EAChB,IACE,IAAIM,SAASN,EAAb,EACD,CAAC,MAAOO,GACPC,QAAQC,MAAM,kDAAmDF,EAClE,GAEF,KAEN,CA0ID,MAAO,CACL5B,KAxIF,SAAc+B,GAEZ,MAAMnC,EACsB,iBAAnBmC,GAAQ9B,OACXR,SAAS8B,cAAcQ,EAAO9B,QAC9B8B,GAAQ9B,QAAUR,SAAS8B,cAAclB,EAASJ,QAExD,IAAKL,EAEH,YADAiC,QAAQC,MAAM,uCAIhB,MAAME,EAAapC,EAAGqC,aAAa,eAC7BC,EAAe,IAChB7B,KACC2B,EAAaG,KAAKC,MAAMJ,GAAc,CAAA,KACvCD,GA9JP,IAA8BxB,EAkKvBX,EAAG2B,cAAc,0BACpB3B,EAAGyC,UAAY,6DAEKH,EAAatB,MACT,mBAAqBsB,EAAatB,MAClC,kDAEasB,EAAajB,wDACdiB,EAAahB,4GAGrBgB,EAAalB,QACT,aAAakB,EAAalB,iEAC1B,yEAIJkB,EAAanB,UACT,qEAC0B,IAA1BmB,EAAa3B,SACb,8BAEE,iBADO2B,EAAa3B,SAEhB,kBACA2B,EAAa3B,SACb,8FA3LZA,EA8Lc2B,EAAa3B,SA7L/B,iBAAbA,EAA8B,GAE3B,CACZ+B,QAAS,GACT,cAAe,GACfC,KAAM,0DACN,YACE,sGACFC,KAAM,GACN,WAAY,0DACZ,gBACE,2FACF,YAAa,GACb,eAAgB,+CAChBC,MAAO,6bAQP,cAAe,+CACfC,SAAU,+CACVC,KAAM,sGACNC,UAAW,GACX,YAAa,+CACbC,MAAO,iDACPC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,yBACRC,OACE,2FACFC,QAAS,oCACT,cAAe,GACfC,MAAO,cACPC,MAAO,GACPC,OAAQ,oCACRC,OAAQ,+CACRC,KAAM,cACNC,SAAU,yBACVC,UAAW,cACXC,KAAM,GACN,gBAAiB,+CACjBC,SAAU,+CACVC,MAAO,cACP,gBAAiB,+CACjB,kBAAmB,+CACnB,cAAe,cACf,mBAAoB,cACpBC,OAAQ,+CACRC,QAAS,cACTC,QAAS,cACT,eAAgB,yBAChBC,OAAQ,cACRC,MAAO,cACPC,SAAU,+CACV,WAAY,GACZ,gBAAiB,cACjBC,IAAK,+CACL,eAAgB,+CAChBC,OAAQ,+CACRC,WAAY,cACZC,QAAS,gDAGE/D,IAAa,qDA8HQ,0EAIkB,IAAtB2B,EAAa5B,KACT,0CAA0C4B,EAAa5B,mDACnD4B,EAAa5B,mDAEjB,yEAIJ4B,EAAazB,YACT,oLAGIyB,EAAaxB,mBACT,sDACA,iDAGR,gGAOlC,MAAM6D,EAAc3E,EAAG2B,cAAc,wBAC/BiD,EAAS5E,EAAG2B,cAAc,mBAC1BkD,EAAgB7E,EAAG2B,cAAc,2BACjCmD,EAAuB9E,EAAG2B,cAC9B,kCAEIoD,EAAoB/E,EAAG2B,cAAc,+BAG3CgD,EAAY/C,UAAUoD,OAAO,kBAC7BhF,EAAGC,MAAMC,QAAU,QAGnByE,EAAYM,aAAa,aAAc3C,EAAajB,WACpDsD,EAAYM,aAAa,YAAa3C,EAAahB,UAG/CsD,IAAyC,IAA/BtC,EAAa1B,eAvK7B,SAA4BgE,EAAQM,EAAexE,GAEjDkE,EAAOO,UAAY,iBACfD,GACFN,EAAOhD,UAAUC,IAAI,qBAAqBqD,KAItB,SAAlBA,GACFN,EAAOnC,UAAY,IACC/B,GAAQ,IAChB0E,MAAM,IAAIrF,QAASsF,IAC7B,MAAMC,EAAOzF,SAAS0F,cAAc,QACpCD,EAAKE,YAAcH,EACnBT,EAAOa,YAAYH,MAEM,aAAlBJ,GACTN,EAAOnC,UAAY,IACJ/B,GAAQ,IAAI0E,MAAM,KAC3BrF,QAAS2F,IACb,MAAMC,EAAM9F,SAAS0F,cAAc,OACnCI,EAAIH,YAAcE,EAClBd,EAAOa,YAAYE,MAGrBf,EAAOY,YAAc9E,GAAQ,EAEhC,CA6IGkF,CAAmBhB,EAAQtC,EAAa1B,cAAe0B,EAAa5B,MAIlE4B,EAAanB,WAAa4D,GA5QhC,SAAoBtD,GAClB,GAAyB,oBAAdoE,WAA8BtF,EAeT,oBAAdsF,WAGhB5D,QAAQ6D,KAAK,4DAFbrE,QAhBqD,CACrD,MAAMsE,EAASlG,SAAS0F,cAAc,UACtCQ,EAAOC,IACL,uEACFD,EAAOE,OAAS,WACd1F,GAAe,EACfkB,GACR,EACMsE,EAAOG,QAAU,WACfjE,QAAQ6D,KACN,4DAEFrE,GACR,EACM5B,SAASsG,KAAKV,YAAYM,EAChC,CAMG,CAuPGK,CAAW,KACgB,oBAAdP,WACTA,UAAUQ,cAAc,CACtB3E,UAAWqD,EACXuB,SAAU,MACVC,MAAM,EACNC,UAAU,EACVC,KAAMnE,EAAanB,cAOvB0D,GAAiBvC,EAAazB,aA7JpC,SAA4BgE,EAAeC,EAAsB/D,GAC/D,IAAI2F,EAAQ,KAEZ,MAAMC,EAAWC,IACVF,IAAOA,EAAQE,GACpB,MAAMC,EAAWC,KAAKC,KAAKH,EAAYF,GAAS3F,EAAU,GAC1D8D,EAAc5E,MAAM+G,MAAsB,IAAXH,EAAH,IAExB/B,IACFA,EAAqBU,YAAc,GAAGsB,KAAKG,MAAiB,IAAXJ,OAG/CA,EAAW,GACbK,sBAAsBP,IAI1BO,sBAAsBP,EACvB,CA4IGQ,CACEtC,EACAC,EACAxC,EAAavB,UAKbuB,EAAarB,UACfa,WAAW,KACTN,EAAWxB,EAAIsC,EAAapB,aAC3BoB,EAAavB,UAAY,KAG9BP,GAAc,CACf,EAKC4G,cAAe,WACb,OAAO5G,CACR,EAED6G,KAAM,SAAUhH,EAAS,cACvB,MAAML,EACc,iBAAXK,EAAsBR,SAAS8B,cAActB,GAAUA,EAC5DL,IACFA,EAAGC,MAAMC,QAAU,QACnBF,EAAG2B,cAAc,yBAAyBC,UAAUoD,OAClD,kBAGL,EAEDsC,KAAM,SAAUjH,EAAS,aAAcoB,GACrC,MAAMzB,EACc,iBAAXK,EAAsBR,SAAS8B,cAActB,GAAUA,EAC5DL,GACFwB,EAAWxB,EAAIyB,EAElB,EAED8F,YAAa,SAAUC,EAASnH,EAAS,cACvC,MAAML,EACc,iBAAXK,EAAsBR,SAAS8B,cAActB,GAAUA,EAChE,GAAIL,EAAI,CACN,MAAMa,EAAcb,EAAG2B,cAAc,2BAC/Bb,EAAqBd,EAAG2B,cAC5B,kCAEEd,IACFA,EAAYZ,MAAM+G,MAAQ,GAAGF,KAAKC,IAAI,IAAKD,KAAKW,IAAI,EAAGD,QAErD1G,IACFA,EAAmB0E,YAAc,GAAGsB,KAAKG,MAAMO,MAElD,CACF,EAEDE,QAAS,SAAUhH,EAAML,EAAS,cAChC,MAAML,EACc,iBAAXK,EAAsBR,SAAS8B,cAActB,GAAUA,EAChE,GAAIL,EAAI,CACN,MAAM4E,EAAS5E,EAAG2B,cAAc,mBAC5BiD,IACFA,EAAOY,YAAc9E,EACrBkE,EAAOK,aAAa,YAAavE,GAEpC,CACF,EAEDiH,aAAc,SAAUC,EAAOvH,EAAS,cACtC,MAAML,EACc,iBAAXK,EAAsBR,SAAS8B,cAActB,GAAUA,EAChE,GAAIL,EAAI,CACN,MAAM0B,EAAY1B,EAAG2B,cAAc,wBAC/BD,GACFA,EAAUuD,aAAa,aAAc2C,EAExC,CACF,EAGDC,QAAS,SAAUC,GACjBA,EAAIC,UAAU,YAAa,CACzBC,MAAO,CACL7F,OAAQ,CACN8F,KAAMC,OACNxF,QAAS,KAAO,CAAE,KAGtB,OAAAyF,GACEhI,UAAUC,KAAK,CACbC,OAAQ+H,KAAKC,OACVD,KAAKjG,QAEX,EACDmG,OAAOC,GACEA,EAAE,MAAO,CACdC,MAAO,CACL,cAAe,gBAKxB,EAGDC,eAAgB,SAAUT,GACxB,MAAM7F,OAAEA,KAAWuG,GAASV,GAAS,CAAA,EAC/BW,EAAMC,MAAMC,OAAO,MAazB,OAXAD,MAAME,UAAU,KACd3I,UAAUC,KAAK,CACbC,OAAQsI,EAAII,WACT5G,IAGE,QAGN,CAACA,IAEGyG,MAAMrD,cAAc,MAAO,CAChCoD,IAAKA,EACL,cAAe,eACZD,GAEN,EAEL,EApc2CM,EAAOC,QAE9CD,EAAAC,QAAiBtJ,IAGjBsJ,EAAA9I,UAAoBR,IAkcI,YAAxBE,SAASqJ,WACXtJ,IAEAC,SAASsJ,iBAAiB,mBAAoBvJ"}